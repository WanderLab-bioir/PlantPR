{
  "hash": "c50b3313bab0e0c5883ca7755ebedd1b",
  "result": {
    "engine": "knitr",
    "markdown": "---\nexecute: \n  echo: true\n  eval: false\n  warning: false\n---\n\n\n# Visualization of Gene Family Evolution across a phylogenetic tree\n\nThis script processes the CAFE5 results in order t analyze the gene gain and loss of PR gene families across the phylogeny of plant orders. It creates visualizations of the gene family dynamics and summarizes the results in a table.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(here)\nlibrary(dbplyr)\nlibrary(tidyverse)\nlibrary(readr)\nlibrary(rotl)\nlibrary(ape)\nlibrary(ggtree)\nlibrary(ggplot2)\nlibrary(cowplot)\nlibrary(RColorBrewer)\nlibrary(ape)\nlibrary(tidytree)\nlibrary(treeio)\nlibrary(readr)\n\nset.seed(123) # for reproducibility\n```\n:::\n\n\n## Read and process CAFE5 output files\n\nRead the gene increase and decrease data from CAFE5 results:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclade_data <- read_tsv(\"../cafe5/results cafe/Base_clade_results.txt\", comment = \"#\", col_names = c(\"Taxon_ID\", \"Increase\", \"Decrease\"))\nclade_data$Node <- gsub(\".*<(\\\\d+)>.*\", \"\\\\1\", clade_data$Taxon_ID)\nclade_data$Taxon <- gsub(\"<\\\\d+>\", \"\", clade_data$Taxon_ID)\nclade_data\n```\n:::\n\n\nRead the tree from CAFE5 results:\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read raw lines\nlines <- readLines(\"../cafe5/results cafe/Base_asr.tre\")\n\n# Extract the line starting with \"TREE\"\ntree_line <- grep(\"^\\\\s*TREE\\\\s\", lines, value = TRUE)[1]\n\n# Extract Newick part after the \"=\" sign\nnewick <- sub(\".*=\\\\s*\", \"\", tree_line)\n\n# Optional: save the Newick to a separate file for loading\nwriteLines(newick, \"cafe_tree.nwk\")\n\n# Now read it\ntree <- read.tree(\"cafe_tree.nwk\")\ntree$edge.length <- NULL\np <- ggtree(tree)\n```\n:::\n\n\nExtract the node labels:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlabel_table <- data.frame(\n  label = tree$node.label,\n  node = (length(tree$tip.label) + 1):(length(tree$tip.label) + tree$Nnode)\n)\n\n# Extract just the numeric ID from CAFE notation\nlabel_table$cafe_id <- gsub(\".*<(\\\\d+)>.*\", \"\\\\1\", label_table$label)\n```\n:::\n\n\nLoad pr families results:\n\n::: {.cell}\n\n```{.r .cell-code}\npr_families <- read_csv(\"../cafe5/results cafe/pr_cafe_results.csv\")\npr_family_ids <- unique(pr_families$FamilyID)  # Adjust column name if needed\n```\n:::\n\n\nLoad the gene change data per node and filter to only PR families:\n\n::: {.cell}\n\n```{.r .cell-code}\n# This file has changes (Inc/Dec) per family per node\nchange_data <- read_tsv(\"../cafe5/results cafe/Base_change.tab\")\nchange_pr <- change_data %>%\n  filter(FamilyID %in% pr_family_ids)\n```\n:::\n\n\nFormat the data for the plot and add labels with gene gain and gene loss per node:\n\n::: {.cell}\n\n```{.r .cell-code}\n# Exclude 'FamilyID' column, pivot longer\nchange_long <- change_pr %>%\n  pivot_longer(\n    -FamilyID,\n    names_to = \"NodeLabel\",\n    values_to = \"Change\"\n  )\n\nnode_changes <- change_long %>%\n  filter(grepl(\"^<\\\\d+>$\", NodeLabel)) %>%\n  mutate(cafe_id = gsub(\"[<>]\", \"\", NodeLabel)) %>%\n  group_by(cafe_id) %>%\n  summarise(\n    Increase = sum(Change[Change > 0], na.rm = TRUE),\n    Decrease = abs(sum(Change[Change < 0], na.rm = TRUE)),\n    label = paste0(\"+\", Increase, \" / -\", Decrease)\n  )\nnode_changes <- node_changes %>%\n  filter(!(Increase == 0 & Decrease == 0))\n\nannot_nodes <- inner_join(label_table, node_changes, by = \"cafe_id\")\nplot_data <- left_join(p$data, annot_nodes, by = \"node\")\nplot_data$label[plot_data$isTip] <- gsub(\n  \"^([A-Z])[a-z]+_([a-z]+)<\\\\d+>.*$\",\n  \"\\\\1. \\\\2\",\n  plot_data$label[plot_data$isTip]\n)\nplot_data\n```\n:::\n\n\nAdd metada from PLAZA:\n\n::: {.cell}\n\n```{.r .cell-code}\nmetadata <- read_tsv(\"species_metadata_PLAZA.tsv\")\nmetadata <- metadata %>%\n    mutate(label = paste0(substr(word(name, 1), 1, 1), \". \", word(name, 2)))\nhead(metadata)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_data <- left_join(plot_data, metadata %>% select(label, order), by = \"label\")\nplot_data$order <- as.factor(plot_data$order)\nplot_data <- droplevels(plot_data)\n```\n:::\n\n\n## Visualizations\n\n### PR genes evolution\n\nFormat the data for plotting:\n\n::: {.cell}\n\n```{.r .cell-code}\n# Count number of species per order (for tips only)\norder_counts <- plot_data %>%\n  filter(isTip) %>%\n  count(order, name = \"n_species\")\n\n# Replace orders with ≤ 2 species (or NA) with \"Other\"\nplot_data <- plot_data %>%\n  left_join(order_counts, by = \"order\") %>%\n  mutate(order_clean = ifelse(n_species <= 2 | is.na(order), \"Other\", as.character(order))) %>%\n  mutate(order_clean = factor(order_clean))  # recreate factor with clean labels\n\n# Generate up to 20 distinct colors from Set3\nn_orders <- length(unique(plot_data$order_clean))\npalette <- colorRampPalette(RColorBrewer::brewer.pal(12, \"Paired\"))(n_orders)\n```\n:::\n\n\nCreate a expansions/contractions tree of the PR genes:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ✅ Rename tip labels BEFORE plotting\ntree$tip.label <- gsub(\n  \"^([A-Z])[a-z]+_([a-z]+)<\\\\d+>.*$\",\n  \"\\\\1. \\\\2\",\n  tree$tip.label\n)\n\n# Build the tree and map in data\np <- ggtree(tree, layout = \"fan\") %<+% plot_data +\n  geom_tree(color = \"gray60\", size = 0.3, alpha = 0.7) +\n  theme_tree2()\n\nfinal_plot <- p +\n  geom_tippoint(aes(fill = order_clean), shape = 21, size = 3, color = \"black\") +\n  geom_tiplab(size = 6, color = \"black\", offset = 0.5) +\n  geom_label2(\n    data = plot_data %>% filter(!is.na(label.y)),\n    aes(label = label.y),\n    size = 4,\n    fill = \"white\",\n    color = \"black\",\n    fontface = \"bold\"\n  ) +\n  scale_fill_manual(values = palette, name = \"Order\") +\n  guides(color = guide_legend(override.aes = list(shape = 21, size = 5))) +\n  ggtitle(\"Gene Expansion / Contraction of PR Families\") +\n  theme_tree2() +\n  theme(\n    legend.text = element_text(size = 16),\n    legend.title = element_text(size = 18, face = \"bold\"),\n    plot.title = element_text(size = 24, face = \"bold\", hjust = 0.5)\n  )\n\n\n# Save as PDF\nggsave(\"pr_genes_tree.png\", plot = final_plot, width = 20, height = 20, units = \"in\")\n```\n:::\n\n\n### PR families evolution\n\nCompute expansion and contraction of PR families per node:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Join with PRname\nchange_long <- change_long %>%\n  left_join(pr_families %>% select(FamilyID, PRname), by = \"FamilyID\") %>%\n  mutate(NodeLabel = gsub(\".*<(\\\\d+)>.*\", \"\\\\1\", NodeLabel))\n\n# Count number of unique PR families that expand or contract per node\nfamily_change_counts <- change_long %>%\n  filter(grepl(\"^\\\\d+$\", NodeLabel)) %>%\n  mutate(cafe_id = NodeLabel,\n         Direction = case_when(\n           Change > 0 ~ \"Expansion\",\n           Change < 0 ~ \"Contraction\",\n           TRUE ~ \"NoChange\"\n         )) %>%\n  filter(Direction != \"NoChange\") %>%\n  distinct(cafe_id, PRname, Direction) %>%\n  pivot_wider(\n    names_from = Direction,\n    values_from = PRname,\n    values_fn = length,\n    values_fill = 0\n  ) %>%\n  mutate(label = paste0(\"+\", Expansion, \" / -\", Contraction))\n```\n:::\n\n\nPrepare plot data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Join with node labels\nannot_families <- inner_join(label_table, family_change_counts, by = \"cafe_id\")\nplot_data_fam <- left_join(p$data, annot_families, by = \"node\")\n\n# Reuse tip labels\nplot_data_fam$label[plot_data_fam$isTip] <- gsub(\n  \"^([A-Z])[a-z]+_([a-z]+)<\\\\d+>.*$\",\n  \"\\\\1. \\\\2\",\n  plot_data_fam$label[plot_data_fam$isTip]\n)\n\n# Add order colors\nplot_data_fam <- left_join(plot_data_fam, metadata %>% select(label, order), by = \"label\")\n\norder_counts <- plot_data_fam %>%\n  filter(isTip) %>%\n  count(order.y, name = \"n_species\")\n\nplot_data_fam <- plot_data_fam %>%\n  left_join(order_counts, by = \"order.y\") %>%\n  mutate(Order = ifelse(n_species.x <= 2 | is.na(order.y), \"Other\", as.character(order.y)),\n         Order = factor(Order))\n\nplot_data_fam\n```\n:::\n\n\nCreate tree visualization for PR families:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot\np_fam <- ggtree(tree, layout = \"fan\") %<+% plot_data_fam +\n  geom_tree(color = \"gray60\", size = 0.3, alpha = 0.7) +\n  theme_tree2()\n\nfinal_plot_fam <- p_fam +\n  geom_tippoint(aes(fill = Order), shape = 21, size = 5, color = \"black\") +\n  geom_tiplab(size = 6, color = \"black\", offset = 0.5) +\n  geom_label2(\n    data = plot_data_fam %>% filter(!is.na(label.y.y)),\n    aes(label = label.y.y),\n    size = 4,\n    fill = \"white\",\n    color = \"black\",\n    fontface = \"bold\"\n  ) +\n  scale_fill_manual(values = palette, name = \"Order\") +\n  guides(color = guide_legend(override.aes = list(shape = 21, size = 6))) +\n  ggtitle(\"Number of PR Gene Families Expanded / Contracted per Node\") +\n  theme_tree2() +\n  theme(\n    legend.text = element_text(size = 16),\n    legend.title = element_text(size = 18, face = \"bold\"),\n    plot.title = element_text(size = 26, face = \"bold\", hjust = 0.5)\n  )\n\nggsave(\"pr_families_tree.png\", plot = final_plot_fam, width = 20, height = 20, units = \"in\")\n```\n:::\n\n\n\nCreate a summary table of PR family dynamics:\n\n::: {.cell}\n\n```{.r .cell-code}\n# Summarize per PR family: across nodes\npr_family_dynamics <- change_pr %>%\n  pivot_longer(-FamilyID, names_to = \"NodeLabel\", values_to = \"Change\") %>%\n  left_join(pr_families %>% select(FamilyID, PRname), by = \"FamilyID\") %>%\n  filter(grepl(\"^<\\\\d+>$\", NodeLabel), Change != 0) %>%\n  mutate(\n    Node = gsub(\"[<>]\", \"\", NodeLabel),\n    Direction = if_else(Change > 0, \"Expansion\", \"Contraction\")\n  ) %>%\n  distinct(Node, PRname, Direction) %>%\n  count(PRname, Direction, name = \"NumEvents\") %>%\n  pivot_wider(\n    names_from = Direction,\n    values_from = NumEvents,\n    values_fill = 0\n  )\n\n# Save the table\nwrite_csv(pr_family_dynamics, \"pr_family_dynamics.csv\")\n\n# View result\npr_family_dynamics\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}