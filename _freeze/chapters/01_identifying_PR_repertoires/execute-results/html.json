{
  "hash": "5cb00d59cb03b9fdd62e34954a05d671",
  "result": {
    "engine": "knitr",
    "markdown": "---\nexecute: \n  echo: true\n  eval: false\n  warning: false\n---\n\n\n# Identification of plant PR gene repertoires\n\nIn this document, we will describe the code to identify PR-encoding\ngenes in plant genomes.\n\nWe will start by loading required packages.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(here)\nlibrary(tidyverse)\nlibrary(ggtree)\nlibrary(patchwork)\n\nset.seed(123)\n```\n:::\n\n\n## Obtaining gene repertoires\n\nAfter a BLAST search against the PLAZA databases (Monocots and Dicots), we\nfound that PR proteins of each family are contained in the following\nPLAZA gene families.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# PR family to PLAZA family assignments\npr_monocots <- data.frame(\n  PR = c(\n    \"PR1\", \"PR2\", \"PR3\", \"PR4\", \"PR5\", \"PR6\", \"PR6\", \"PR6\", \"PR7\", \n    \"PR8\", \"PR9\", \"PR10\", \"PR10\", \"PR11\", \"PR12\", \n    \"PR13\", \"PR14\", \"PR15\", \"PR16\", \"PR17\"\n  ),\n  family = c(\n    \"HOM05M000176\", \"HOM05M000021\", \"HOM05M000197\", \"HOM05M001261\",\n    \"HOM05M000094\", \"HOM05M007126\", \"HOM05M000680\",\"HOM05M000792\",\n    \"HOM05M000024\", \"HOM05M000233\", \"HOM05M000005\", \"HOM05M000737\",\n    \"HOM05M004276\", \"HOM05M002226\", \"HOM05M011346\", \"HOM05D002484\",\n    \"HOM05M000361\", \"HOM05M000050\", \"HOM05M000050\", \"HOM05M001084\" \n  )\n)\n\npr_dicots <- data.frame(\n  PR = c(\n    \"PR1\", \"PR2\", \"PR3\", \"PR4\", \"PR5\", \"PR6\", \"PR7\", \"PR8\", \"PR9\", \n    \"PR10\", \"PR11\", \"PR12\", \"PR13\", \"PR14\", \"PR15\",  \"PR16\", \"PR17\"\n  ),\n  family = c(\n    \"HOM05D000217\", \"HOM05D000020\", \"HOM05D000242\", \"HOM05D002072\",\n    \"HOM05D000102\", \"HOM05D001004\", \"HOM05D000015\", \"HOM05D000662\",\n    \"HOM05D000044\", \"HOM05D000322\", \"HOM05D000741\", \"HOM05D002484\",\n    \"HOM05D007540\", \"HOM05D000275\", \"HOM05D000052\", \"HOM05D000052\",\n    \"HOM05D001524\"\n  )\n)\n```\n:::\n\n\nWe will now use these PLAZA family IDs to find PR repertoires.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read family delineations from PLAZA\nplaza_families <- bind_rows(\n  read_tsv(\n    \"https://ftp.psb.ugent.be/pub/plaza/plaza_public_dicots_05/GeneFamilies/genefamily_data.HOMFAM.csv.gz\", \n    comment = \"# \", show_col_types = FALSE,\n  ) |>\n    dplyr::rename(family = 1),\n  read_tsv(\n  \"https://ftp.psb.ugent.be/pub/plaza/plaza_public_monocots_05/GeneFamilies/genefamily_data.HOMFAM.csv.gz\", \n  comment = \"# \", show_col_types = FALSE\n) |>\n  dplyr::rename(family = 1)\n)\n\n# Get PR-encoding genes based on PLAZA IDs\npr_genes <- bind_rows(\n  pr_monocots |> inner_join(plaza_families),\n  pr_dicots |> inner_join(plaza_families)\n) |>\n  select(PR, species, gene_id) |>\n  distinct(.keep_all = TRUE)\n```\n:::\n\n\n## Frequency of PR-encoding genes across species\n\nNow, we will visualize the frequency of PR genes (for each PR family) across\nspecies. We will first obtain a tree plot to use as phylogenetic context.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read tree\ntree <- ape::read.tree(here(\"data\", \"tree_combined.nwk\"))\n\n# Read species metadata\nspecies_meta <- read_tsv(\n  here(\"data\", \"species_metadata_plaza.tsv\"),\n  show_col_types = FALSE\n) |>\n  filter(species %in% tree$tip.label)\n  \ntree <- ape::keep.tip(tree, species_meta$species)\n\n# Replace low-frequency orders with \"Other\"\ntoreplace <- count(species_meta, order) |> filter(n <=3) |> pull(order)\nspecies_meta <- species_meta |>\n  mutate(Order = ifelse(order %in% toreplace, \"Other\", order))\n\n# Plot tree with tips colored by order\np_tree <- ggtree(tree) %<+% species_meta +\n  geom_tippoint(aes(color = Order)) +\n  ggsci::scale_color_d3(\"category20\")\n```\n:::\n\n\nThen, we will plot frequencies of PR genes across species using a heatmap.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get counts as a wide matrix and get values scaled by column (PR family)\nscaled_counts <- pr_genes |>\n  dplyr::count(species, PR, .drop = FALSE) |>\n  pivot_wider(\n    names_from = PR, values_from = n, values_fill = 0\n  ) |>\n  column_to_rownames(\"species\") |>\n  as.matrix() |>\n  ComplexHeatmap::pheatmap(scale = \"column\")\n\n# Pivot from wide to long and plot heatmap\np_heatmap <- scaled_counts@matrix |>\n  as.data.frame() |>\n  rownames_to_column(\"species\") |>\n  pivot_longer(\n    names_to = \"PR\", values_to = \"n\", cols = -species\n  ) |>\n  filter(PR != \"PR15\") |>\n  mutate(\n    species = factor(species, levels = rev(get_taxa_name(p_tree))),\n    PR = str_replace_all(PR, \"PR\", \"PR-\"),\n    PR = factor(PR, levels = paste0(\"PR-\", c(1:14, 16, 17)))\n  ) |>\n  ggplot(aes(x = PR, y = species, fill = n)) +\n  geom_tile() +\n  #scale_fill_gradient(low = \"#E5F5E0\", high = \"#006D2C\")\n  scale_fill_viridis_c() +\n  theme_classic() +\n  theme(\n    axis.ticks.y = element_blank(),\n    axis.text.y = element_blank(),\n    axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)\n  ) +\n  labs(\n    x = \"PR family\",\n    y = NULL,\n    title = \"Frequency of PR-encoding genes across species\",\n    fill = \"Scaled counts\"\n  )\n\n# Combine tree and heatmap\np_heatmap_final <- wrap_plots(\n  p_tree + theme(legend.position = \"left\"), \n  p_heatmap, \n  widths = c(0.3, 0.7)\n)\n```\n:::\n\n\nSaving the final plot to a PNG file.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\n  p_heatmap_final, width = 10, height = 9,\n  file = \"heatmap_scaled_counts.png\", dpi = 300\n)\n```\n:::\n\n\n## Session information\n\nThis document was created under the following conditions:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.4.1 (2024-06-14)\n os       Ubuntu 22.04.4 LTS\n system   x86_64, linux-gnu\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Europe/Brussels\n date     2025-05-14\n pandoc   3.2 @ /usr/lib/rstudio/resources/app/bin/quarto/bin/tools/x86_64/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package      * version date (UTC) lib source\n ape            5.8     2024-04-11 [1] CRAN (R 4.4.1)\n aplot          0.2.3   2024-06-17 [1] CRAN (R 4.4.1)\n cli            3.6.3   2024-06-21 [1] CRAN (R 4.4.1)\n colorspace     2.1-0   2023-01-23 [1] CRAN (R 4.4.1)\n digest         0.6.36  2024-06-23 [1] CRAN (R 4.4.1)\n dplyr        * 1.1.4   2023-11-17 [1] CRAN (R 4.4.1)\n evaluate       0.24.0  2024-06-10 [1] CRAN (R 4.4.1)\n fansi          1.0.6   2023-12-08 [1] CRAN (R 4.4.1)\n farver         2.1.2   2024-05-13 [1] CRAN (R 4.4.1)\n fastmap        1.2.0   2024-05-15 [1] CRAN (R 4.4.1)\n forcats      * 1.0.0   2023-01-29 [1] CRAN (R 4.4.1)\n fs             1.6.4   2024-04-25 [1] CRAN (R 4.4.1)\n generics       0.1.3   2022-07-05 [1] CRAN (R 4.4.1)\n ggfun          0.1.5   2024-05-28 [1] CRAN (R 4.4.1)\n ggplot2      * 3.5.1   2024-04-23 [1] CRAN (R 4.4.1)\n ggplotify      0.1.2   2023-08-09 [1] CRAN (R 4.4.1)\n ggtree       * 3.12.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)\n glue           1.7.0   2024-01-09 [1] CRAN (R 4.4.1)\n gridGraphics   0.5-1   2020-12-13 [1] CRAN (R 4.4.1)\n gtable         0.3.5   2024-04-22 [1] CRAN (R 4.4.1)\n here         * 1.0.1   2020-12-13 [1] CRAN (R 4.4.1)\n hms            1.1.3   2023-03-21 [1] CRAN (R 4.4.1)\n htmltools      0.5.8.1 2024-04-04 [1] CRAN (R 4.4.1)\n htmlwidgets    1.6.4   2023-12-06 [1] CRAN (R 4.4.1)\n jsonlite       1.8.8   2023-12-04 [1] CRAN (R 4.4.1)\n knitr          1.48    2024-07-07 [1] CRAN (R 4.4.1)\n lattice        0.22-6  2024-03-20 [1] CRAN (R 4.4.1)\n lazyeval       0.2.2   2019-03-15 [1] CRAN (R 4.4.1)\n lifecycle      1.0.4   2023-11-07 [1] CRAN (R 4.4.1)\n lubridate    * 1.9.3   2023-09-27 [1] CRAN (R 4.4.1)\n magrittr       2.0.3   2022-03-30 [1] CRAN (R 4.4.1)\n munsell        0.5.1   2024-04-01 [1] CRAN (R 4.4.1)\n nlme           3.1-165 2024-06-06 [1] CRAN (R 4.4.1)\n patchwork    * 1.3.0   2024-09-16 [1] CRAN (R 4.4.1)\n pillar         1.9.0   2023-03-22 [1] CRAN (R 4.4.1)\n pkgconfig      2.0.3   2019-09-22 [1] CRAN (R 4.4.1)\n purrr        * 1.0.2   2023-08-10 [1] CRAN (R 4.4.1)\n R6             2.5.1   2021-08-19 [1] CRAN (R 4.4.1)\n Rcpp           1.0.13  2024-07-17 [1] CRAN (R 4.4.1)\n readr        * 2.1.5   2024-01-10 [1] CRAN (R 4.4.1)\n rlang          1.1.4   2024-06-04 [1] CRAN (R 4.4.1)\n rmarkdown      2.27    2024-05-17 [1] CRAN (R 4.4.1)\n rprojroot      2.0.4   2023-11-05 [1] CRAN (R 4.4.1)\n rstudioapi     0.16.0  2024-03-24 [1] CRAN (R 4.4.1)\n scales         1.3.0   2023-11-28 [1] CRAN (R 4.4.1)\n sessioninfo    1.2.2   2021-12-06 [1] CRAN (R 4.4.1)\n stringi        1.8.4   2024-05-06 [1] CRAN (R 4.4.1)\n stringr      * 1.5.1   2023-11-14 [1] CRAN (R 4.4.1)\n tibble       * 3.2.1   2023-03-20 [1] CRAN (R 4.4.1)\n tidyr        * 1.3.1   2024-01-24 [1] CRAN (R 4.4.1)\n tidyselect     1.2.1   2024-03-11 [1] CRAN (R 4.4.1)\n tidytree       0.4.6   2023-12-12 [1] CRAN (R 4.4.1)\n tidyverse    * 2.0.0   2023-02-22 [1] CRAN (R 4.4.1)\n timechange     0.3.0   2024-01-18 [1] CRAN (R 4.4.1)\n treeio         1.28.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)\n tzdb           0.4.0   2023-05-12 [1] CRAN (R 4.4.1)\n utf8           1.2.4   2023-10-22 [1] CRAN (R 4.4.1)\n vctrs          0.6.5   2023-12-01 [1] CRAN (R 4.4.1)\n withr          3.0.0   2024-01-16 [1] CRAN (R 4.4.1)\n xfun           0.51    2025-02-19 [1] CRAN (R 4.4.1)\n yaml           2.3.9   2024-07-05 [1] CRAN (R 4.4.1)\n yulab.utils    0.2.0   2025-01-29 [1] CRAN (R 4.4.1)\n\n [1] /home/faalm/R/x86_64-pc-linux-gnu-library/4.4\n [2] /usr/local/lib/R/site-library\n [3] /usr/lib/R/site-library\n [4] /usr/lib/R/library\n\n──────────────────────────────────────────────────────────────────────────────\n```\n\n\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}